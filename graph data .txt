#include<stdio.h>
#include<stdlib.h>
struct node {
    int data;
    struct node *link;
};

struct node * newNode(int value)
{
    struct node *temp = (struct node*)malloc(sizeof(struct node*));
    temp->data = value;
    temp->link = NULL;
    return temp;
}

void add_value(struct node **graph,int u, int v)
{
    struct node *temp=newNode(v);
    struct node *p = graph[u];
    if(p==NULL)
        graph[u]= temp;
    else
    {
        while(p->link!=NULL)
            p = p->link;
        p->link = temp;
    }
}


void add_edge(struct node **graph,int u,int v)
{
    add_value(graph,u,v); // edge creation
    add_value(graph,v,u);
    printf("Edge Established Successfully!\n");
}
void dfs(struct node **graph,int v)
{
    int *visited = (int*)malloc(7*sizeof(int*));
    int i;
    for(i=0;i<7;i++)
        visited[i]=0;
    printf("Dfs : ");
    dfs_helper(graph,visited,v);
    printf("\n");
}
void dfs_helper(struct node **graph,int *visited,int v)
{
    printf("%d ",v);
    visited[v] =1;
    struct node *p = graph[v];
    while(p!=NULL)
    {
        if(visited[p->data]==0)
            dfs_helper(graph,visited,p->data);
        p = p->link;
    }
}











int main()
{
    int n=7,i;
    struct node **graph = (struct node **)malloc(n*sizeof(struct node **));
    for(i=0;i<n;i++)
        graph[i] = NULL;

    add_edge(graph,1,2);
    add_edge(graph,1,3);
    add_edge(graph,2,4);
    add_edge(graph,3,4);
    add_edge(graph,3,5);
    add_edge(graph,4,5);
    add_edge(graph,4,6);
    // printing of the graph
    for(i=0;i<n;i++)
    {
        printf("%d -> ",i);
        struct node *p = graph[i];
        while(p!=NULL)
        {
            printf("%d - ",p->data);
            p = p->link;
        }
        printf("\n");
    }
    dfs(graph,1);
    return 0;
}













